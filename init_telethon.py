import os
from dotenv import load_dotenv
from telethon import TelegramClient, errors
from telethon.sessions import StringSession

load_dotenv()

API_ID = os.getenv('API_ID')
API_HASH = os.getenv('API_HASH')
if not API_ID or not API_HASH:
    print("‚ùó –£—Å—Ç–∞–Ω–æ–≤–∏ API_ID –∏ API_HASH –≤ .env")
    exit(1)

def main():
    print("=== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telethon –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å–µ—Å—Å–∏–∏ ===")
    session_str = os.getenv('TELEGRAM_SESSION_STRING')
    if session_str:
        client = TelegramClient(StringSession(session_str), API_ID, API_HASH)
    else:
        client = TelegramClient(StringSession(), API_ID, API_HASH)

    async def start_flow():
        await client.connect()
        if not await client.is_user_authorized():
            phone = input("üì± –í–≤–µ–¥–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω (–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç): ")
            await client.send_code_request(phone)
            code = input("üì© –í–≤–µ–¥–∏ –∫–æ–¥ –∏–∑ Telegram: ")
            try:
                await client.sign_in(phone, code)
            except errors.SessionPasswordNeededError:
                pw = input("üîê –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ")
                await client.sign_in(password=pw)
        me = await client.get_me()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à—ë–ª –∫–∞–∫ {me.username} [{me.id}]")

        saved = client.session.save()
        print("\nüìå TELEGRA–ú_SESSION_STRING:\n")
        print(saved)
        print("\nüîí –°–æ—Ö—Ä–∞–Ω–∏ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ .env –∫–∞–∫ TELEGRAM_SESSION_STRING")
        await client.disconnect()

    client.loop.run_until_complete(start_flow())

if __name__ == "__main__":
    main()